'use client'
import { motion } from "framer-motion";
import blogs from "../data/blogs";
import { format, parseISO } from 'date-fns';
import Link from "next/link";

export default function Blogs() {
    const cardVariant = {
        offscreen: {
            opacity: 0,
            y: -20
        },
        onscreen: {
            opacity: 1,
            y: 0,
            transition: {
                type: "spring",
                bounce: 0.4,
                duration: 2
            }
        }
    }

    return (
        <div className="w-full max-w-4xl mb-32 p-6 ">
            <p className=' my-8 font-semibold text-lg '>Blogs</p>
            <div className="w-full grid grid-cols-1 gap-6 max-w-4xl items-center ">
                {
                    blogs && blogs
                        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
                        .map((blog, index) => {
                            return (
                                <motion.div
                                    key={index}
                                    variants={cardVariant}
                                    initial="offscreen"
                                    whileInView="onscreen"
                                    viewport={{ once: true, amount: 0.8 }}
                                    className=' text-sm '>
                                    <time dateTime={blog.date} className="flex gap-2 items-center my-2">
                                        <svg className=" fill-raisin_black dark:fill-whisper_white" width="14" height="16" viewBox="0 0 14 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M9.00469 12.9165C8.46351 12.9165 8.00451 12.7297 7.62771 12.356C7.2509 11.9823 7.0625 11.5249 7.0625 10.9837C7.0625 10.4425 7.24934 9.98352 7.62302 9.60671C7.99669 9.22991 8.45412 9.0415 8.99531 9.0415C9.53649 9.0415 9.99549 9.22834 10.3723 9.60202C10.7491 9.97569 10.9375 10.4331 10.9375 10.9743C10.9375 11.5155 10.7507 11.9745 10.377 12.3513C10.0033 12.7281 9.54588 12.9165 9.00469 12.9165ZM1.58333 15.7915C1.19949 15.7915 0.870882 15.6524 0.597521 15.3742C0.324174 15.096 0.1875 14.7698 0.1875 14.3957V3.56234C0.1875 3.1882 0.324174 2.86202 0.597521 2.58382C0.870882 2.30561 1.19949 2.1665 1.58333 2.1665H3.1875V0.864421C3.1875 0.672754 3.25548 0.508517 3.39144 0.371712C3.52741 0.234906 3.6906 0.166504 3.88102 0.166504C4.07145 0.166504 4.23611 0.234906 4.375 0.371712C4.51389 0.508517 4.58333 0.672754 4.58333 0.864421V2.1665H9.41667V0.864421C9.41667 0.672754 9.48465 0.508517 9.6206 0.371712C9.75658 0.234906 9.91977 0.166504 10.1102 0.166504C10.3006 0.166504 10.4653 0.234906 10.6042 0.371712C10.7431 0.508517 10.8125 0.672754 10.8125 0.864421V2.1665H12.4167C12.8005 2.1665 13.1291 2.30561 13.4025 2.58382C13.6758 2.86202 13.8125 3.1882 13.8125 3.56234V14.3957C13.8125 14.7698 13.6758 15.096 13.4025 15.3742C13.1291 15.6524 12.8005 15.7915 12.4167 15.7915H1.58333ZM1.58333 14.3957H12.4167V7.0415H1.58333V14.3957Z" />
                                        </svg>
                                        {format(parseISO(blog.date), 'LLLL d, yyyy')}
                                    </time>
                                    <h1 className='font-semibold my-2 text-base'>{blog.title}</h1>

                                    {/* <hr className="h-px bg-primary border-0 mb-2 " /> */}
                                    {/* <p className='my-2 line-clamp-2'>{blog.description}</p> */}
                                    {/* <hr className="h-px bg-primary border-0 mt-2 " /> */}

                                    {blog.publishedAt.length &&
                                        <div className='flex gap-2 items-center group '>
                                            Read
                                            <svg className="fill-midnight_black dark:fill-whisper_white" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M8.00542 15.7918C6.93344 15.7918 5.92413 15.5886 4.97749 15.1822C4.03083 14.7758 3.20238 14.2167 2.49213 13.5051C1.78188 12.7935 1.22363 11.9651 0.817383 11.02C0.411133 10.075 0.208008 9.06516 0.208008 7.99062C0.208008 6.91494 0.411223 5.90725 0.817654 4.96756C1.22408 4.02785 1.78311 3.20287 2.49474 2.49262C3.20636 1.78237 4.03472 1.22412 4.9798 0.817871C5.92487 0.411621 6.93467 0.208496 8.00922 0.208496C9.0849 0.208496 10.0926 0.411711 11.0323 0.818142C11.972 1.22457 12.797 1.7836 13.5072 2.49523C14.2175 3.20685 14.7757 4.03358 15.182 4.97541C15.5882 5.91723 15.7913 6.92357 15.7913 7.99441C15.7913 9.0664 15.5881 10.0757 15.1817 11.0224C14.7753 11.969 14.2162 12.7975 13.5046 13.5077C12.793 14.218 11.9663 14.7762 11.0244 15.1825C10.0826 15.5887 9.07627 15.7918 8.00542 15.7918ZM8.24967 8.69808L7.48926 9.4585C7.34342 9.60433 7.27398 9.76232 7.28092 9.93245C7.28787 10.1026 7.36773 10.2641 7.52051 10.4168C7.67329 10.5696 7.83822 10.646 8.0153 10.646C8.19238 10.646 8.35698 10.5699 8.50909 10.4178L10.4422 8.48473C10.5847 8.34477 10.6559 8.18261 10.6559 7.99827C10.6559 7.81392 10.583 7.65136 10.4372 7.51058L8.47884 5.55225C8.33301 5.40641 8.17502 5.33176 8.00488 5.32829C7.83474 5.32482 7.67329 5.39947 7.52051 5.55225C7.36773 5.70502 7.29134 5.86995 7.29134 6.04704C7.29134 6.22412 7.36773 6.38905 7.52051 6.54183L8.24967 7.30225H5.74372C5.55374 7.30225 5.39092 7.37023 5.25526 7.50618C5.11959 7.64216 5.05176 7.80535 5.05176 7.99577C5.05176 8.1862 5.11959 8.35086 5.25526 8.48975C5.39092 8.62864 5.55374 8.69808 5.74372 8.69808H8.24967Z" />
                                            </svg>
                                            {blog.publishedAt.map((platform) => {
                                                return <Link key={platform.url} className='py-2 px-1 hover:text-mossy underline duration-500 ease-in-out ' href={platform.url} target='_blank'>{platform.platform}</Link>
                                            })}
                                        </div>
                                    }
                                </motion.div>
                            );
                        })
                }
            </div>
        </div>
    );
}